# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
general:
    branches:
        ignore:
            - docker-image/*
jobs:

    build:
        docker:
            - image: docker:stable
        working_directory: ~/
        steps:
            - checkout
            - setup_remote_docker:
                docker_layer_caching: true

            - run:
                name: Run elasticsearch
                command: |
                    docker run -d \
                        -p 9200:9200 \
                        --name="apisearch.elasticsearch" \
                        -e "cluster.name=apisearch" \
                        -e "http.host=0.0.0.0" \
                        -e "transport.host=0.0.0.0" \
                        -e "ES_JAVA_OPTS=-Xms1g -Xmx1g" \
                        -e "action.auto_create_index=+apisearch_item_*_*-plugin-*,+apisearch_log_*,+apisearch_event_*,-apisearch*,+*" \
                        -e "node.max_local_storage_nodes=10" \
                        -e "discovery.type=single-node" \
                         docker.elastic.co/elasticsearch/elasticsearch:6.2.4

            - run:
                name: Run Redis
                command: |
                    docker run -d \
                        --name="apisearch.redis" \
                        redis:4-alpine \
                        redis-server

            - run:
                name: Build Apisearch
                command: |
                    cp .circleci/.env.test .env
                    docker build -t apisearch/server .

            - run:
                name: Run Apisearch in server mode
                command: |
                    docker run -d \
                        --name "apisearch.server" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch" \
                        apisearch/server \
                        sh /server-pm-entrypoint.sh

            - run:
                name: Run Apisearch in commands consumer mode
                command: |
                    docker run -d \
                        --name "apisearch.commands_consumer" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch" \
                        apisearch/server \
                        sh /commands-consumer-entrypoint.sh

            - run:
                name: Run Apisearch in domain events consumer mode
                command: |
                    docker run -d \
                        --name "apisearch.domain_events_worker" \
                        --link "apisearch.redis" \
                        --link "apisearch.elasticsearch" \
                        apisearch/server \
                        sh /domain-events-consumer-entrypoint.sh

            - run:
                name: Run tests
                command: |
                    docker logs apisearch.server
                    docker logs apisearch.commands_consumer
                    docker logs apisearch.domain_events_worker
                    docker exec -it apisearch.server sh /var/www/apisearch/scripts/run-tests
